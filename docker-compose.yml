version: '3.8'
volumes:
  n8n_storage:
  postgres_storage:
  ollama_storage:
  qdrant_storage:
  infinity_storage:

networks:
  n8n:

x-n8n: &service-n8n
  image: n8nio/n8n:latest
  networks: ['n8n']
  environment:
    - DB_TYPE=postgresdb
    - DB_POSTGRESDB_HOST=postgres
    - DB_POSTGRESDB_USER=${POSTGRES_USER}
    - DB_POSTGRESDB_PASSWORD=${POSTGRES_PASSWORD}
    - N8N_DIAGNOSTICS_ENABLED=false
    - N8N_PERSONALIZATION_ENABLED=false
    - N8N_ENCRYPTION_KEY
    - N8N_USER_MANAGEMENT_JWT_SECRET
    - EXTERNAL_HOOK_FILES=/hooks.js
  links:
    - postgres

x-ollama: &service-ollama
  image: ollama/ollama:latest
  container_name: ollama
  networks: ['n8n']
  restart: unless-stopped
  ports:
    - 11434:11434
  volumes:
    - ollama_storage:/root/.ollama

x-infinity: &service-infinity
  image: michaelf34/infinity
  container_name: infinity
  networks: ['n8n']
  restart: unless-stopped
  environment:
    - SENTENCE_TRANSFORMERS_HOME=/infinity
    - MODEL_ID=BAAI/bge-small-en-v1.5
  ports:
    - 7997:7997
  volumes:
    - infinity_storage:/infinity

x-gpu-support: &deploy-gpu
  resources:
    reservations:
      devices:
        - driver: nvidia
          count: 1
          capabilities: [gpu]

services:
  postgres:
    image: postgres:16-alpine
    container_name: postgres
    networks: ['n8n']
    restart: unless-stopped
    environment:
      - POSTGRES_USER
      - POSTGRES_PASSWORD
      - POSTGRES_DB
    volumes:
      - postgres_storage:/var/lib/postgresql/data
    ports:
      - 5432:5432
    healthcheck:
      test: ['CMD-SHELL', 'pg_isready -h localhost -U ${POSTGRES_USER} -d ${POSTGRES_DB}']
      interval: 5s
      timeout: 5s
      retries: 10

  n8n-import:
    <<: *service-n8n
    container_name: n8n-import
    entrypoint: /bin/sh
    command:
      - "-c"
      - "n8n import:credentials --separate --input=/backup/credentials && n8n import:workflow --separate --input=/backup/workflows"
    volumes:
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy

  n8n:
    <<: *service-n8n
    container_name: n8n
    restart: unless-stopped
    ports:
      - 5678:5678
    volumes:
      - n8n_storage:/home/node/.n8n
      - ./n8n/hooks.js:/hooks.js
      - ./n8n/backup:/backup
    depends_on:
      postgres:
        condition: service_healthy
      n8n-import:
        condition: service_completed_successfully

  qdrant:
    image: qdrant/qdrant
    container_name: qdrant
    networks: ['n8n']
    restart: unless-stopped
    ports:
      - 6333:6333
    volumes:
      - qdrant_storage:/qdrant/storage

  ollama-cpu:
    profiles: ["cpu"]
    <<: *service-ollama

  infinity-cpu:
    profiles: ["cpu"]
    <<: *service-infinity

  ollama-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-ollama
    deploy:
      <<: *deploy-gpu

  infinity-gpu:
    profiles: ["gpu-nvidia"]
    <<: *service-infinity
    deploy:
      <<: *deploy-gpu
